/*flexberryautogenerated="true"*/
namespace IIS.BusinessCalendar
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET.Web.Controls;

    using Resources;

    public partial class ExceptionDayL : BaseListForm<ExceptionDay>
    {
        /// <summary>
        /// Конструктор без параметров,
        /// инициализирует свойства, соответствующие конкретной форме.
        /// </summary>
        public ExceptionDayL() : base(ExceptionDay.Views.ExceptionDayL)
        {
            EditPage = ExceptionDayE.FormPath;
        }
                
        /// <summary>
        /// Путь до формы.
        /// </summary>
        public static string FormPath
        {
            get { return "~/forms/ExceptionDay/ExceptionDayL.aspx"; }
        }

        /// <summary>
        /// Вызывается самым первым в Page_Load.
        /// </summary>
        protected override void Preload()
        {
            WebObjectListView1.Operations.OpenEditorInNewWindow = true;
            WebObjectListView1.Operations.OpenEditorInModalWindow = true;
        }

        /// <summary>
        /// Вызывается самым последним в Page_Load.
        /// </summary>
        protected override void Postload()
        {
            using (var ds = (SQLDataService)DataServiceProvider.DataService)
            {
                List<ExceptionDay> exceptionDays = ds.LoadObjects(ExceptionDay.Views.ExceptionDayE).Cast<ExceptionDay>().ToList();
                List<ExcDay> excDays = Converter.ExceptionDaysToShort(exceptionDays);
                ctrlCalendarView.DataSource = excDays;            
            }
        }
    }
}
