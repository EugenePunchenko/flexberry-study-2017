/*flexberryautogenerated="true"*/
namespace IIS.BusinessCalendar
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.FunctionalLanguage;
    using ICSSoft.STORMNET.FunctionalLanguage.SQLWhere;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET.Web.Controls;

    using Resources;

    public partial class ExceptionDayL : BaseListForm<ExceptionDay>
    {
        private Function ExceptionDayLimiter;
        /// <summary>
        /// Конструктор без параметров,
        /// инициализирует свойства, соответствующие конкретной форме.
        /// </summary>
        public ExceptionDayL() : base(ExceptionDay.Views.ExceptionDayL)
        {
            EditPage = ExceptionDayE.FormPath;
        }
                
        /// <summary>
        /// Путь до формы.
        /// </summary>
        public static string FormPath
        {
            get { return "~/forms/ExceptionDay/ExceptionDayL.aspx"; }
        }

        /// <summary>
        /// Вызывается самым первым в Page_Load.
        /// </summary>
        protected override void Preload()
        {
            WebObjectListView1.Operations.OpenEditorInNewWindow = true;
            WebObjectListView1.Operations.OpenEditorInModalWindow = true;
            var ld = SQLWhereLanguageDef.LanguageDef;
            ExceptionDayLimiter = ld.GetFunction(ld.funcEQ,
                                                new VariableDef(ld.GuidType, Information.ExtractPropertyPath<ExceptionDay>(e => e.Calendar.__PrimaryKey)),
                                                Request["CalendarID"]);
            WebObjectListView1.LimitFunction = this.ExceptionDayLimiter;
        }

        /// <summary>
        /// Вызывается самым последним в Page_Load.
        /// </summary>
        protected override void Postload()
        {
            bindCalendarDataSource();
        }

        protected void WebObjectListView1_ObjectsDeleted(ICSSoft.STORMNET.Web.AjaxControls.WebObjectListView sender, ICSSoft.STORMNET.Web.Tools.WOLVFeatures.WolvObjectDeletedEventArgs args)
        {
            bindCalendarDataSource();
        }

        protected void WebObjectListView1_ObjectAdding(ICSSoft.STORMNET.Web.AjaxControls.WebObjectListView sender, ICSSoft.STORMNET.Web.Tools.WOLVFeatures.WolvEventArgs args)
        {
            bindCalendarDataSource();
        }

        protected void WebObjectListView1_ObjectEditing(ICSSoft.STORMNET.Web.AjaxControls.WebObjectListView sender, ICSSoft.STORMNET.Web.Tools.WOLVFeatures.WolvObjectEditingEventArgs args)
        {
            bindCalendarDataSource();
        }

        private void bindCalendarDataSource()
        {
            using (var ds = (SQLDataService)DataServiceProvider.DataService)
            {
                List<ExceptionDay> exceptionDays = ds.LoadObjects(ExceptionDay.Views.ExceptionDayE).Cast<ExceptionDay>().ToList();
                List<ExcDay> excDays = Converter.ExceptionDaysToShort(exceptionDays);
                ctrlCalendarView.DataSource = excDays;
            }
        }
    }
}
