//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.BusinessCalendar
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;
    using ICSSoft.STORMNET.Business.Audit.Objects;
    
    
    // *** Start programmer edit section *** (Using statements)
    using System.Linq;
    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Exception day.
    /// </summary>
    // *** Start programmer edit section *** (ExceptionDay CustomAttributes)

    // *** End programmer edit section *** (ExceptionDay CustomAttributes)
    [BusinessServer("IIS.BusinessCalendar.BusinessServer, BusinessCalendar(BusinessServers)", ICSSoft.STORMNET.Business.DataServiceObjectEvents.OnAllEvents)]
    [AutoAltered()]
    [Caption("Exception day")]
    [AccessType(ICSSoft.STORMNET.AccessType.@this)]
    [View("AuditView", new string[] {
            "Name as \'Name\'",
            "DayType as \'Day type\'",
            "RecurrenceType as \'Recurrence type\'",
            "RepeatStep as \'Repeat step\'",
            "StartDate as \'Start date\'",
            "EndDate as \'End date\'",
            "RecurrenceCount as \'Recurrence count\'",
            "WorkTimeSpans as \'Work time spans\'",
            "Calendar as \'Calendar\'",
            "Calendar.Name as \'Name\'",
            "WorkTimeDefinition as \'Work time definition\'",
            "WorkTimeDefinition.SumTime as \'Sum time\'"})]
    [View("ExceptionDayE", new string[] {
            "Name as \'Название\'",
            "DayType as \'Тип дня\'",
            "RecurrenceType as \'Тип повторения\'",
            "RepeatStep as \'Шаг повторения\'",
            "StartDate as \'Дата начала\'",
            "EndDate as \'Дата окончания\'",
            "RecurrenceCount as \'Количество повторений\'",
            "WorkTimeSpans as \'Временные промежутки\'",
            "Calendar as \'Календарь\'",
            "Calendar.Name as \'Название календаря\'",
            "WorkTimeDefinition as \'Определение рабочего времени\'",
            "WorkTimeDefinition.SumTime as \'Сумма рабочего времени\'"}, Hidden=new string[] {
            "Calendar",
            "Calendar.Name",
            "WorkTimeDefinition",
            "WorkTimeDefinition.SumTime"})]
    [MasterViewDefineAttribute("ExceptionDayE", "Calendar", ICSSoft.STORMNET.LookupTypeEnum.Combo, "", "Name")]
    [View("ExceptionDayL", new string[] {
            "Name as \'Название\'",
            "DayType as \'Тип дня\'",
            "RecurrenceType as \'Тип повторения\'",
            "RepeatStep as \'Шаг повторения\'",
            "StartDate as \'Дата начала\'",
            "EndDate as \'Дата окончания\'",
            "RecurrenceCount as \'Количество повторений\'",
            "WorkTimeSpans as \'Временные промежутки\'",
            "Calendar",
            "Calendar.Name as \'Название\'",
            "WorkTimeDefinition.SumTime as \'Сумма рабочего времени\'"}, Hidden=new string[] {
            "WorkTimeSpans",
            "Calendar",
            "Calendar.Name",
            "WorkTimeDefinition.SumTime"})]
    public class ExceptionDay : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {
        
        private string fName;
        
        private IIS.BusinessCalendar.DayType fDayType;
        
        private IIS.BusinessCalendar.RecurrenceType fRecurrenceType;
        
        private int fRepeatStep;
        
        private System.DateTime fStartDate;
        
        private System.DateTime fEndDate;
        
        private int fRecurrenceCount;
        
        private System.Nullable<System.DateTime> fCreateTime;
        
        private string fCreator;
        
        private System.Nullable<System.DateTime> fEditTime;
        
        private string fEditor;
        
        private IIS.BusinessCalendar.Calendar fCalendar;
        
        private IIS.BusinessCalendar.WorkTimeDefinition fWorkTimeDefinition;
        
        // *** Start programmer edit section *** (ExceptionDay CustomMembers)
        private System.Collections.Generic.List<TimeSpan> fWorkTimeSpans;

        /// <summary>
        /// Метод возвращает "День-исключение" без циклических ссылок
        /// </summary>
        /// <returns></returns>
        public ExcDay ToShort()
         { 
             return new ExcDay()
             { 
                 PrimaryKey = this.__PrimaryKey.ToString(), 
                 StartDate = this.StartDate.Subtract(new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)).TotalMilliseconds, 
                 EndDate = this.EndDate.Subtract(new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)).TotalMilliseconds, 
                 RecurrenceCount = this.RecurrenceCount, 
                 RepeatStep = this.RepeatStep, 
                 RecurrenceType = this.RecurrenceType.ToString(), 
                 Name = this.Name 
             }; 
         }

        // *** End programmer edit section *** (ExceptionDay CustomMembers)

        
        /// <summary>
        /// Name.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.Name CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.Name CustomAttributes)
        [StrLen(255)]
        public virtual string Name
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.Name Get start)

                // *** End programmer edit section *** (ExceptionDay.Name Get start)
                string result = this.fName;
                // *** Start programmer edit section *** (ExceptionDay.Name Get end)

                // *** End programmer edit section *** (ExceptionDay.Name Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.Name Set start)

                // *** End programmer edit section *** (ExceptionDay.Name Set start)
                this.fName = value;
                // *** Start programmer edit section *** (ExceptionDay.Name Set end)

                // *** End programmer edit section *** (ExceptionDay.Name Set end)
            }
        }
        
        /// <summary>
        /// DayType.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.DayType CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.DayType CustomAttributes)
        public virtual IIS.BusinessCalendar.DayType DayType
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.DayType Get start)

                // *** End programmer edit section *** (ExceptionDay.DayType Get start)
                IIS.BusinessCalendar.DayType result = this.fDayType;
                // *** Start programmer edit section *** (ExceptionDay.DayType Get end)

                // *** End programmer edit section *** (ExceptionDay.DayType Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.DayType Set start)

                // *** End programmer edit section *** (ExceptionDay.DayType Set start)
                this.fDayType = value;
                // *** Start programmer edit section *** (ExceptionDay.DayType Set end)

                // *** End programmer edit section *** (ExceptionDay.DayType Set end)
            }
        }
        
        /// <summary>
        /// RecurrenceType.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.RecurrenceType CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.RecurrenceType CustomAttributes)
        public virtual IIS.BusinessCalendar.RecurrenceType RecurrenceType
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.RecurrenceType Get start)

                // *** End programmer edit section *** (ExceptionDay.RecurrenceType Get start)
                IIS.BusinessCalendar.RecurrenceType result = this.fRecurrenceType;
                // *** Start programmer edit section *** (ExceptionDay.RecurrenceType Get end)
    
                // *** End programmer edit section *** (ExceptionDay.RecurrenceType Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.RecurrenceType Set start)

                // *** End programmer edit section *** (ExceptionDay.RecurrenceType Set start)
                this.fRecurrenceType = value;
                // *** Start programmer edit section *** (ExceptionDay.RecurrenceType Set end)

                // *** End programmer edit section *** (ExceptionDay.RecurrenceType Set end)
            }
        }
        
        /// <summary>
        /// RepeatStep.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.RepeatStep CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.RepeatStep CustomAttributes)
        public virtual int RepeatStep
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.RepeatStep Get start)

                // *** End programmer edit section *** (ExceptionDay.RepeatStep Get start)
                int result = this.fRepeatStep;
                // *** Start programmer edit section *** (ExceptionDay.RepeatStep Get end)

                // *** End programmer edit section *** (ExceptionDay.RepeatStep Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.RepeatStep Set start)

                // *** End programmer edit section *** (ExceptionDay.RepeatStep Set start)
                this.fRepeatStep = value;
                // *** Start programmer edit section *** (ExceptionDay.RepeatStep Set end)

                // *** End programmer edit section *** (ExceptionDay.RepeatStep Set end)
            }
        }
        
        /// <summary>
        /// StartDate.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.StartDate CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.StartDate CustomAttributes)
        public virtual System.DateTime StartDate
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.StartDate Get start)

                // *** End programmer edit section *** (ExceptionDay.StartDate Get start)
                System.DateTime result = this.fStartDate;
                // *** Start programmer edit section *** (ExceptionDay.StartDate Get end)

                // *** End programmer edit section *** (ExceptionDay.StartDate Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.StartDate Set start)

                // *** End programmer edit section *** (ExceptionDay.StartDate Set start)
                this.fStartDate = value;
                // *** Start programmer edit section *** (ExceptionDay.StartDate Set end)

                // *** End programmer edit section *** (ExceptionDay.StartDate Set end)
            }
        }
        
        /// <summary>
        /// EndDate.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.EndDate CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.EndDate CustomAttributes)
        public virtual System.DateTime EndDate
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.EndDate Get start)

                // *** End programmer edit section *** (ExceptionDay.EndDate Get start)
                System.DateTime result = this.fEndDate;
                // *** Start programmer edit section *** (ExceptionDay.EndDate Get end)

                // *** End programmer edit section *** (ExceptionDay.EndDate Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.EndDate Set start)

                // *** End programmer edit section *** (ExceptionDay.EndDate Set start)
                this.fEndDate = value;
                // *** Start programmer edit section *** (ExceptionDay.EndDate Set end)

                // *** End programmer edit section *** (ExceptionDay.EndDate Set end)
            }
        }
        
        /// <summary>
        /// RecurrenceCount.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.RecurrenceCount CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.RecurrenceCount CustomAttributes)
        public virtual int RecurrenceCount
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.RecurrenceCount Get start)

                // *** End programmer edit section *** (ExceptionDay.RecurrenceCount Get start)
                int result = this.fRecurrenceCount;
                // *** Start programmer edit section *** (ExceptionDay.RecurrenceCount Get end)

                // *** End programmer edit section *** (ExceptionDay.RecurrenceCount Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.RecurrenceCount Set start)

                // *** End programmer edit section *** (ExceptionDay.RecurrenceCount Set start)
                this.fRecurrenceCount = value;
                // *** Start programmer edit section *** (ExceptionDay.RecurrenceCount Set end)

                // *** End programmer edit section *** (ExceptionDay.RecurrenceCount Set end)
            }
        }
        
        /// <summary>
        /// WorkTimeSpans.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.WorkTimeSpans CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.WorkTimeSpans CustomAttributes)
        [ICSSoft.STORMNET.NotStored()]
        public virtual System.Collections.Generic.List<TimeSpan> WorkTimeSpans
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.WorkTimeSpans Get)
                if (fWorkTimeSpans == null)
                {
                    if (!(WorkTimeDefinition == null))
                    {
                        ICSSoft.STORMNET.Business.DataServiceProvider.DataService.LoadObject(WorkTimeDefinition.Views.WorkTimeDefinitionE, this.WorkTimeDefinition, false, false);
                        this.fWorkTimeSpans = Converter.convertWorkTimeSpans(this.WorkTimeDefinition.WorkTimeSpan.Cast<WorkTimeSpan>().ToList());
                    }
                    else
                    {
                        fWorkTimeSpans = new System.Collections.Generic.List<TimeSpan>();
                    }
                }
                return fWorkTimeSpans;
                // *** End programmer edit section *** (ExceptionDay.WorkTimeSpans Get)
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.WorkTimeSpans Set)
                this.fWorkTimeSpans = value;
                // *** End programmer edit section *** (ExceptionDay.WorkTimeSpans Set)
            }
        }
        
        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.CreateTime CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.CreateTime Get start)

                // *** End programmer edit section *** (ExceptionDay.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (ExceptionDay.CreateTime Get end)

                // *** End programmer edit section *** (ExceptionDay.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.CreateTime Set start)

                // *** End programmer edit section *** (ExceptionDay.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (ExceptionDay.CreateTime Set end)

                // *** End programmer edit section *** (ExceptionDay.CreateTime Set end)
            }
        }
        
        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.Creator CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.Creator Get start)

                // *** End programmer edit section *** (ExceptionDay.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (ExceptionDay.Creator Get end)

                // *** End programmer edit section *** (ExceptionDay.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.Creator Set start)

                // *** End programmer edit section *** (ExceptionDay.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (ExceptionDay.Creator Set end)

                // *** End programmer edit section *** (ExceptionDay.Creator Set end)
            }
        }
        
        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.EditTime CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.EditTime Get start)

                // *** End programmer edit section *** (ExceptionDay.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (ExceptionDay.EditTime Get end)

                // *** End programmer edit section *** (ExceptionDay.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.EditTime Set start)

                // *** End programmer edit section *** (ExceptionDay.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (ExceptionDay.EditTime Set end)

                // *** End programmer edit section *** (ExceptionDay.EditTime Set end)
            }
        }
        
        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.Editor CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.Editor Get start)

                // *** End programmer edit section *** (ExceptionDay.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (ExceptionDay.Editor Get end)

                // *** End programmer edit section *** (ExceptionDay.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.Editor Set start)

                // *** End programmer edit section *** (ExceptionDay.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (ExceptionDay.Editor Set end)

                // *** End programmer edit section *** (ExceptionDay.Editor Set end)
            }
        }
        
        /// <summary>
        /// Exception day.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.Calendar CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.Calendar CustomAttributes)
        [PropertyStorage(new string[] {
                "Calendar"})]
        [NotNull()]
        public virtual IIS.BusinessCalendar.Calendar Calendar
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.Calendar Get start)

                // *** End programmer edit section *** (ExceptionDay.Calendar Get start)
                IIS.BusinessCalendar.Calendar result = this.fCalendar;
                // *** Start programmer edit section *** (ExceptionDay.Calendar Get end)

                // *** End programmer edit section *** (ExceptionDay.Calendar Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.Calendar Set start)

                // *** End programmer edit section *** (ExceptionDay.Calendar Set start)
                this.fCalendar = value;
                // *** Start programmer edit section *** (ExceptionDay.Calendar Set end)

                // *** End programmer edit section *** (ExceptionDay.Calendar Set end)
            }
        }
        
        /// <summary>
        /// Exception day.
        /// </summary>
        // *** Start programmer edit section *** (ExceptionDay.WorkTimeDefinition CustomAttributes)

        // *** End programmer edit section *** (ExceptionDay.WorkTimeDefinition CustomAttributes)
        public virtual IIS.BusinessCalendar.WorkTimeDefinition WorkTimeDefinition
        {
            get
            {
                // *** Start programmer edit section *** (ExceptionDay.WorkTimeDefinition Get start)

                // *** End programmer edit section *** (ExceptionDay.WorkTimeDefinition Get start)
                IIS.BusinessCalendar.WorkTimeDefinition result = this.fWorkTimeDefinition;
                // *** Start programmer edit section *** (ExceptionDay.WorkTimeDefinition Get end)

                // *** End programmer edit section *** (ExceptionDay.WorkTimeDefinition Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ExceptionDay.WorkTimeDefinition Set start)

                // *** End programmer edit section *** (ExceptionDay.WorkTimeDefinition Set start)
                this.fWorkTimeDefinition = value;
                // *** Start programmer edit section *** (ExceptionDay.WorkTimeDefinition Set end)

                // *** End programmer edit section *** (ExceptionDay.WorkTimeDefinition Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(IIS.BusinessCalendar.ExceptionDay));
                }
            }
            
            /// <summary>
            /// "ExceptionDayE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View ExceptionDayE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("ExceptionDayE", typeof(IIS.BusinessCalendar.ExceptionDay));
                }
            }
            
            /// <summary>
            /// "ExceptionDayL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View ExceptionDayL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("ExceptionDayL", typeof(IIS.BusinessCalendar.ExceptionDay));
                }
            }
        }
        
        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {
            
            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;
            
            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;
            
            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";
            
            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";
            
            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;
            
            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;
            
            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;
            
            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;
            
            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;
            
            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
}
