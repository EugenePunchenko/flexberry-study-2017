//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewPlatform.RecordBookBL
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;
    using ICSSoft.STORMNET.Business.Audit.Objects;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Студент.
    /// </summary>
    // *** Start programmer edit section *** (Студент CustomAttributes)

    // *** End programmer edit section *** (Студент CustomAttributes)
    [BusinessServer("NewPlatform.RecordBookBL.ЭлектроннаяЗачётка, RecordBookBL(BusinessServers)", ICSSoft.STORMNET.Business.DataServiceObjectEvents.OnAllEvents)]
    [AutoAltered()]
    [ICSSoft.STORMNET.NotStored(false)]
    [AccessType(ICSSoft.STORMNET.AccessType.@this)]
    [View("AuditView", new string[] {
            "Рейтинг as \'Рейтинг\'",
            "СреднийБалл as \'Средний балл\'",
            "Отчислен as \'Отчислен\'",
            "НомерЗачетки as \'Номер зачетки\'",
            "Фамилия as \'Фамилия\'",
            "Имя as \'Имя\'",
            "Отчество as \'Отчество\'",
            "ДатаРождения as \'Дата рождения\'",
            "Логин as \'Логин\'",
            "ФИО as \'ФИО\'"})]
    [View("СтудентE", new string[] {
            "Рейтинг as \'Рейтинг\'",
            "СреднийБалл as \'Средний балл\'",
            "Отчислен as \'Отчислен\'",
            "Фамилия as \'Фамилия\'",
            "Имя as \'Имя\'",
            "Отчество as \'Отчество\'",
            "ДатаРождения as \'Дата рождения\'",
            "Логин as \'Логин\'",
            "ФИО as \'ФИО\'",
            "НомерЗачетки as \'Номер зачетки\'"})]
    public class Студент : NewPlatform.RecordBookBL.Личность, IDataObjectWithAuditFields
    {
        
        private int fРейтинг = 0;
        
        private double fСреднийБалл = 0D;
        
        private bool fОтчислен = false;
        
        private string fНомерЗачетки;
        
        private System.Nullable<System.DateTime> fCreateTime;
        
        private string fCreator;
        
        private System.Nullable<System.DateTime> fEditTime;
        
        private string fEditor;
        
        private NewPlatform.RecordBookBL.Группа fГруппа;
        
        // *** Start programmer edit section *** (Студент CustomMembers)

        // *** End programmer edit section *** (Студент CustomMembers)

        
        /// <summary>
        /// Рейтинг.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Рейтинг CustomAttributes)

        // *** End programmer edit section *** (Студент.Рейтинг CustomAttributes)
        [NotNull()]
        public virtual int Рейтинг
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Рейтинг Get start)

                // *** End programmer edit section *** (Студент.Рейтинг Get start)
                int result = this.fРейтинг;
                // *** Start programmer edit section *** (Студент.Рейтинг Get end)

                // *** End programmer edit section *** (Студент.Рейтинг Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Рейтинг Set start)

                // *** End programmer edit section *** (Студент.Рейтинг Set start)
                this.fРейтинг = value;
                // *** Start programmer edit section *** (Студент.Рейтинг Set end)

                // *** End programmer edit section *** (Студент.Рейтинг Set end)
            }
        }
        
        /// <summary>
        /// СреднийБалл.
        /// </summary>
        // *** Start programmer edit section *** (Студент.СреднийБалл CustomAttributes)

        // *** End programmer edit section *** (Студент.СреднийБалл CustomAttributes)
        [NotNull()]
        public virtual double СреднийБалл
        {
            get
            {
                // *** Start programmer edit section *** (Студент.СреднийБалл Get start)

                // *** End programmer edit section *** (Студент.СреднийБалл Get start)
                double result = this.fСреднийБалл;
                // *** Start programmer edit section *** (Студент.СреднийБалл Get end)

                // *** End programmer edit section *** (Студент.СреднийБалл Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.СреднийБалл Set start)

                // *** End programmer edit section *** (Студент.СреднийБалл Set start)
                this.fСреднийБалл = value;
                // *** Start programmer edit section *** (Студент.СреднийБалл Set end)

                // *** End programmer edit section *** (Студент.СреднийБалл Set end)
            }
        }
        
        /// <summary>
        /// Отчислен.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Отчислен CustomAttributes)

        // *** End programmer edit section *** (Студент.Отчислен CustomAttributes)
        [NotNull()]
        public virtual bool Отчислен
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Отчислен Get start)

                // *** End programmer edit section *** (Студент.Отчислен Get start)
                bool result = this.fОтчислен;
                // *** Start programmer edit section *** (Студент.Отчислен Get end)

                // *** End programmer edit section *** (Студент.Отчислен Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Отчислен Set start)

                // *** End programmer edit section *** (Студент.Отчислен Set start)
                this.fОтчислен = value;
                // *** Start programmer edit section *** (Студент.Отчислен Set end)

                // *** End programmer edit section *** (Студент.Отчислен Set end)
            }
        }
        
        /// <summary>
        /// НомерЗачетки.
        /// </summary>
        // *** Start programmer edit section *** (Студент.НомерЗачетки CustomAttributes)

        // *** End programmer edit section *** (Студент.НомерЗачетки CustomAttributes)
        [StrLen(12)]
        public virtual string НомерЗачетки
        {
            get
            {
                // *** Start programmer edit section *** (Студент.НомерЗачетки Get start)

                // *** End programmer edit section *** (Студент.НомерЗачетки Get start)
                string result = this.fНомерЗачетки;
                // *** Start programmer edit section *** (Студент.НомерЗачетки Get end)

                // *** End programmer edit section *** (Студент.НомерЗачетки Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.НомерЗачетки Set start)

                // *** End programmer edit section *** (Студент.НомерЗачетки Set start)
                this.fНомерЗачетки = value;
                // *** Start programmer edit section *** (Студент.НомерЗачетки Set end)

                // *** End programmer edit section *** (Студент.НомерЗачетки Set end)
            }
        }
        
        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (Студент.CreateTime CustomAttributes)

        // *** End programmer edit section *** (Студент.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (Студент.CreateTime Get start)

                // *** End programmer edit section *** (Студент.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (Студент.CreateTime Get end)

                // *** End programmer edit section *** (Студент.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.CreateTime Set start)

                // *** End programmer edit section *** (Студент.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (Студент.CreateTime Set end)

                // *** End programmer edit section *** (Студент.CreateTime Set end)
            }
        }
        
        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Creator CustomAttributes)

        // *** End programmer edit section *** (Студент.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Creator Get start)

                // *** End programmer edit section *** (Студент.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (Студент.Creator Get end)

                // *** End programmer edit section *** (Студент.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Creator Set start)

                // *** End programmer edit section *** (Студент.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (Студент.Creator Set end)

                // *** End programmer edit section *** (Студент.Creator Set end)
            }
        }
        
        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (Студент.EditTime CustomAttributes)

        // *** End programmer edit section *** (Студент.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (Студент.EditTime Get start)

                // *** End programmer edit section *** (Студент.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (Студент.EditTime Get end)

                // *** End programmer edit section *** (Студент.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.EditTime Set start)

                // *** End programmer edit section *** (Студент.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (Студент.EditTime Set end)

                // *** End programmer edit section *** (Студент.EditTime Set end)
            }
        }
        
        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Editor CustomAttributes)

        // *** End programmer edit section *** (Студент.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Editor Get start)

                // *** End programmer edit section *** (Студент.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (Студент.Editor Get end)

                // *** End programmer edit section *** (Студент.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Editor Set start)

                // *** End programmer edit section *** (Студент.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (Студент.Editor Set end)

                // *** End programmer edit section *** (Студент.Editor Set end)
            }
        }
        
        /// <summary>
        /// мастеровая ссылка на шапку NewPlatform.RecordBookBL.Группа.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Группа CustomAttributes)

        // *** End programmer edit section *** (Студент.Группа CustomAttributes)
        [Agregator()]
        [NotNull()]
        public virtual NewPlatform.RecordBookBL.Группа Группа
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Группа Get start)

                // *** End programmer edit section *** (Студент.Группа Get start)
                NewPlatform.RecordBookBL.Группа result = this.fГруппа;
                // *** Start programmer edit section *** (Студент.Группа Get end)

                // *** End programmer edit section *** (Студент.Группа Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Группа Set start)

                // *** End programmer edit section *** (Студент.Группа Set start)
                this.fГруппа = value;
                // *** Start programmer edit section *** (Студент.Группа Set end)

                // *** End programmer edit section *** (Студент.Группа Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(NewPlatform.RecordBookBL.Студент));
                }
            }
            
            /// <summary>
            /// "СтудентE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View СтудентE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("СтудентE", typeof(NewPlatform.RecordBookBL.Студент));
                }
            }
        }
        
        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {
            
            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;
            
            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;
            
            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";
            
            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";
            
            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;
            
            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;
            
            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;
            
            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;
            
            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;
            
            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
    
    /// <summary>
    /// Detail array of Студент.
    /// </summary>
    // *** Start programmer edit section *** (DetailArrayDetailArrayOfСтудент CustomAttributes)

    // *** End programmer edit section *** (DetailArrayDetailArrayOfСтудент CustomAttributes)
    public class DetailArrayOfСтудент : ICSSoft.STORMNET.DetailArray
    {
        
        // *** Start programmer edit section *** (NewPlatform.RecordBookBL.DetailArrayOfСтудент members)

        // *** End programmer edit section *** (NewPlatform.RecordBookBL.DetailArrayOfСтудент members)

        
        /// <summary>
        /// Construct detail array.
        /// </summary>
        /// <summary>
        /// Returns object with type Студент by index.
        /// </summary>
        /// <summary>
        /// Adds object with type Студент.
        /// </summary>
        public DetailArrayOfСтудент(NewPlatform.RecordBookBL.Группа fГруппа) : 
                base(typeof(Студент), ((ICSSoft.STORMNET.DataObject)(fГруппа)))
        {
        }
        
        public NewPlatform.RecordBookBL.Студент this[int index]
        {
            get
            {
                return ((NewPlatform.RecordBookBL.Студент)(this.ItemByIndex(index)));
            }
        }
        
        public virtual void Add(NewPlatform.RecordBookBL.Студент dataobject)
        {
            this.AddObject(((ICSSoft.STORMNET.DataObject)(dataobject)));
        }
    }
}
