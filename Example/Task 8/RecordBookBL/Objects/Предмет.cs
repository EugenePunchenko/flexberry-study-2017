//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewPlatform.RecordBookBL
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;
    using ICSSoft.STORMNET.Business.Audit.Objects;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Предмет.
    /// </summary>
    // *** Start programmer edit section *** (Предмет CustomAttributes)

    // *** End programmer edit section *** (Предмет CustomAttributes)
    [AutoAltered()]
    [AccessType(ICSSoft.STORMNET.AccessType.@this)]
    [View("AuditView", new string[] {
            "Семестр as \'Семестр\'",
            "Семестр.Название as \'Название\'",
            "Дисциплина as \'Дисциплина\'",
            "Дисциплина.Название as \'Название\'",
            "Преподаватель as \'Преподаватель\'",
            "Преподаватель.Фамилия as \'Фамилия\'"})]
    [AssociatedDetailViewAttribute("AuditView", "Оценка", "AuditView", true, "", "Оценка", true, new string[] {
            ""})]
    [View("ПредметE", new string[] {
            "Дисциплина as \'Дисциплина\'",
            "Дисциплина.Название",
            "Семестр as \'Семестр\'",
            "Семестр.Название",
            "Преподаватель as \'Преподаватель\'",
            "Преподаватель.ФИО",
            "Преподаватель.Фамилия",
            "Преподаватель.Имя",
            "Преподаватель.Отчество"}, Hidden=new string[] {
            "Дисциплина.Название",
            "Семестр.Название",
            "Преподаватель.ФИО"})]
    [AssociatedDetailViewAttribute("ПредметE", "Оценка", "ОценкаE", true, "", "Оценка", true, new string[] {
            ""})]
    [MasterViewDefineAttribute("ПредметE", "Дисциплина", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Название")]
    [MasterViewDefineAttribute("ПредметE", "Семестр", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Название")]
    [MasterViewDefineAttribute("ПредметE", "Преподаватель", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "ФИО")]
    [View("ПредметL", new string[] {
            "Дисциплина.Название as \'Название\'",
            "Семестр.Начало as \'Начало\'",
            "Преподаватель.Фамилия as \'Фамилия\'"})]
    public class Предмет : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {
        
        private System.Nullable<System.DateTime> fCreateTime;
        
        private string fCreator;
        
        private System.Nullable<System.DateTime> fEditTime;
        
        private string fEditor;
        
        private NewPlatform.RecordBookBL.Семестр fСеместр;
        
        private NewPlatform.RecordBookBL.Дисциплина fДисциплина;
        
        private NewPlatform.RecordBookBL.Преподаватель fПреподаватель;
        
        private NewPlatform.RecordBookBL.DetailArrayOfОценка fОценка;
        
        // *** Start programmer edit section *** (Предмет CustomMembers)

        // *** End programmer edit section *** (Предмет CustomMembers)

        
        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (Предмет.CreateTime CustomAttributes)

        // *** End programmer edit section *** (Предмет.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (Предмет.CreateTime Get start)

                // *** End programmer edit section *** (Предмет.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (Предмет.CreateTime Get end)

                // *** End programmer edit section *** (Предмет.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Предмет.CreateTime Set start)

                // *** End programmer edit section *** (Предмет.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (Предмет.CreateTime Set end)

                // *** End programmer edit section *** (Предмет.CreateTime Set end)
            }
        }
        
        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (Предмет.Creator CustomAttributes)

        // *** End programmer edit section *** (Предмет.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (Предмет.Creator Get start)

                // *** End programmer edit section *** (Предмет.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (Предмет.Creator Get end)

                // *** End programmer edit section *** (Предмет.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Предмет.Creator Set start)

                // *** End programmer edit section *** (Предмет.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (Предмет.Creator Set end)

                // *** End programmer edit section *** (Предмет.Creator Set end)
            }
        }
        
        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (Предмет.EditTime CustomAttributes)

        // *** End programmer edit section *** (Предмет.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (Предмет.EditTime Get start)

                // *** End programmer edit section *** (Предмет.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (Предмет.EditTime Get end)

                // *** End programmer edit section *** (Предмет.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Предмет.EditTime Set start)

                // *** End programmer edit section *** (Предмет.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (Предмет.EditTime Set end)

                // *** End programmer edit section *** (Предмет.EditTime Set end)
            }
        }
        
        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (Предмет.Editor CustomAttributes)

        // *** End programmer edit section *** (Предмет.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (Предмет.Editor Get start)

                // *** End programmer edit section *** (Предмет.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (Предмет.Editor Get end)

                // *** End programmer edit section *** (Предмет.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Предмет.Editor Set start)

                // *** End programmer edit section *** (Предмет.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (Предмет.Editor Set end)

                // *** End programmer edit section *** (Предмет.Editor Set end)
            }
        }
        
        /// <summary>
        /// Предмет.
        /// </summary>
        // *** Start programmer edit section *** (Предмет.Семестр CustomAttributes)

        // *** End programmer edit section *** (Предмет.Семестр CustomAttributes)
        [NotNull()]
        public virtual NewPlatform.RecordBookBL.Семестр Семестр
        {
            get
            {
                // *** Start programmer edit section *** (Предмет.Семестр Get start)

                // *** End programmer edit section *** (Предмет.Семестр Get start)
                NewPlatform.RecordBookBL.Семестр result = this.fСеместр;
                // *** Start programmer edit section *** (Предмет.Семестр Get end)

                // *** End programmer edit section *** (Предмет.Семестр Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Предмет.Семестр Set start)

                // *** End programmer edit section *** (Предмет.Семестр Set start)
                this.fСеместр = value;
                // *** Start programmer edit section *** (Предмет.Семестр Set end)

                // *** End programmer edit section *** (Предмет.Семестр Set end)
            }
        }
        
        /// <summary>
        /// Предмет.
        /// </summary>
        // *** Start programmer edit section *** (Предмет.Дисциплина CustomAttributes)

        // *** End programmer edit section *** (Предмет.Дисциплина CustomAttributes)
        [NotNull()]
        public virtual NewPlatform.RecordBookBL.Дисциплина Дисциплина
        {
            get
            {
                // *** Start programmer edit section *** (Предмет.Дисциплина Get start)

                // *** End programmer edit section *** (Предмет.Дисциплина Get start)
                NewPlatform.RecordBookBL.Дисциплина result = this.fДисциплина;
                // *** Start programmer edit section *** (Предмет.Дисциплина Get end)

                // *** End programmer edit section *** (Предмет.Дисциплина Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Предмет.Дисциплина Set start)

                // *** End programmer edit section *** (Предмет.Дисциплина Set start)
                this.fДисциплина = value;
                // *** Start programmer edit section *** (Предмет.Дисциплина Set end)

                // *** End programmer edit section *** (Предмет.Дисциплина Set end)
            }
        }
        
        /// <summary>
        /// Предмет.
        /// </summary>
        // *** Start programmer edit section *** (Предмет.Преподаватель CustomAttributes)

        // *** End programmer edit section *** (Предмет.Преподаватель CustomAttributes)
        [PropertyStorage(new string[] {
                "Преподаватель"})]
        [NotNull()]
        public virtual NewPlatform.RecordBookBL.Преподаватель Преподаватель
        {
            get
            {
                // *** Start programmer edit section *** (Предмет.Преподаватель Get start)

                // *** End programmer edit section *** (Предмет.Преподаватель Get start)
                NewPlatform.RecordBookBL.Преподаватель result = this.fПреподаватель;
                // *** Start programmer edit section *** (Предмет.Преподаватель Get end)

                // *** End programmer edit section *** (Предмет.Преподаватель Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Предмет.Преподаватель Set start)

                // *** End programmer edit section *** (Предмет.Преподаватель Set start)
                this.fПреподаватель = value;
                // *** Start programmer edit section *** (Предмет.Преподаватель Set end)

                // *** End programmer edit section *** (Предмет.Преподаватель Set end)
            }
        }
        
        /// <summary>
        /// Предмет.
        /// </summary>
        // *** Start programmer edit section *** (Предмет.Оценка CustomAttributes)

        // *** End programmer edit section *** (Предмет.Оценка CustomAttributes)
        public virtual NewPlatform.RecordBookBL.DetailArrayOfОценка Оценка
        {
            get
            {
                // *** Start programmer edit section *** (Предмет.Оценка Get start)

                // *** End programmer edit section *** (Предмет.Оценка Get start)
                if ((this.fОценка == null))
                {
                    this.fОценка = new NewPlatform.RecordBookBL.DetailArrayOfОценка(this);
                }
                NewPlatform.RecordBookBL.DetailArrayOfОценка result = this.fОценка;
                // *** Start programmer edit section *** (Предмет.Оценка Get end)

                // *** End programmer edit section *** (Предмет.Оценка Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Предмет.Оценка Set start)

                // *** End programmer edit section *** (Предмет.Оценка Set start)
                this.fОценка = value;
                // *** Start programmer edit section *** (Предмет.Оценка Set end)

                // *** End programmer edit section *** (Предмет.Оценка Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(NewPlatform.RecordBookBL.Предмет));
                }
            }
            
            /// <summary>
            /// "ПредметE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View ПредметE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("ПредметE", typeof(NewPlatform.RecordBookBL.Предмет));
                }
            }
            
            /// <summary>
            /// "ПредметL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View ПредметL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("ПредметL", typeof(NewPlatform.RecordBookBL.Предмет));
                }
            }
        }
        
        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {
            
            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;
            
            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;
            
            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";
            
            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";
            
            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;
            
            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;
            
            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;
            
            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;
            
            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;
            
            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
}
