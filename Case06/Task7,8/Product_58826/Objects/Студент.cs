//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.Product_58826
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;
    using ICSSoft.STORMNET.Business.Audit.Objects;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Студент.
    /// </summary>
    // *** Start programmer edit section *** (Студент CustomAttributes)

    // *** End programmer edit section *** (Студент CustomAttributes)
    [BusinessServer("IIS.Product_58826.СтудентБС, Product_58826(BusinessServers)", ICSSoft.STORMNET.Business.DataServiceObjectEvents.OnAllEvents)]
    [AutoAltered()]
    [AccessType(ICSSoft.STORMNET.AccessType.@this)]
    [View("AuditView", new string[] {
            "Фамилия as \'Фамилия\'",
            "Имя as \'Имя\'",
            "Отчество as \'Отчество\'",
            "ДатаРождения as \'Дата рождения\'",
            "Логин as \'Логин\'",
            "Пароль as \'Пароль\'",
            "ФИО as \'ФИО\'",
            "АдресПочты as \'Адрес почты\'",
            "Обучается as \'Обучается\'",
            "КоличествоПрограмм as \'Количество программ\'"})]
    [View("СтудентE", new string[] {
            "Фамилия as \'Фамилия\'",
            "Имя as \'Имя\'",
            "Отчество as \'Отчество\'",
            "ДатаРождения as \'Дата рождения\'",
            "Логин as \'Логин\'",
            "Пароль as \'Пароль\'",
            "АдресПочты as \'e-mail \'",
            "ФИО",
            "Обучается"}, Hidden=new string[] {
            "ФИО"})]
    [View("СтудентL", new string[] {
            "Фамилия as \'Фамилия\'",
            "Имя as \'Имя\'",
            "Отчество as \'Отчество\'",
            "ДатаРождения as \'Дата рождения\'",
            "Логин as \'Логин\'",
            "Пароль as \'Пароль\'",
            "ФИО as \'ФИО\'",
            "АдресПочты as \'e-mail\'",
            "Обучается",
            "Строка",
            "КоличествоПрограмм as \'Общее кол-во выбранных программ\'"})]
    public class Студент : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {
        
        private string fФамилия;
        
        private string fИмя;
        
        private string fОтчество;
        
        private System.DateTime fДатаРождения;
        
        private string fЛогин;
        
        private string fПароль;
        
        private string fАдресПочты;
        
        private bool fОбучается = true;
        
        private int fКоличествоПрограмм;
        
        private System.Nullable<System.DateTime> fCreateTime;
        
        private string fCreator;
        
        private System.Nullable<System.DateTime> fEditTime;
        
        private string fEditor;
        
        // *** Start programmer edit section *** (Студент CustomMembers)

        // *** End programmer edit section *** (Студент CustomMembers)

        
        /// <summary>
        /// Фамилия.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Фамилия CustomAttributes)

        // *** End programmer edit section *** (Студент.Фамилия CustomAttributes)
        [StrLen(255)]
        [NotNull()]
        public virtual string Фамилия
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Фамилия Get start)

                // *** End programmer edit section *** (Студент.Фамилия Get start)
                string result = this.fФамилия;
                // *** Start programmer edit section *** (Студент.Фамилия Get end)

                // *** End programmer edit section *** (Студент.Фамилия Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Фамилия Set start)

                // *** End programmer edit section *** (Студент.Фамилия Set start)
                this.fФамилия = value;
                // *** Start programmer edit section *** (Студент.Фамилия Set end)

                // *** End programmer edit section *** (Студент.Фамилия Set end)
            }
        }
        
        /// <summary>
        /// Имя.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Имя CustomAttributes)

        // *** End programmer edit section *** (Студент.Имя CustomAttributes)
        [StrLen(255)]
        [NotNull()]
        public virtual string Имя
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Имя Get start)

                // *** End programmer edit section *** (Студент.Имя Get start)
                string result = this.fИмя;
                // *** Start programmer edit section *** (Студент.Имя Get end)

                // *** End programmer edit section *** (Студент.Имя Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Имя Set start)

                // *** End programmer edit section *** (Студент.Имя Set start)
                this.fИмя = value;
                // *** Start programmer edit section *** (Студент.Имя Set end)

                // *** End programmer edit section *** (Студент.Имя Set end)
            }
        }
        
        /// <summary>
        /// Отчество.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Отчество CustomAttributes)

        // *** End programmer edit section *** (Студент.Отчество CustomAttributes)
        [StrLen(255)]
        [NotNull()]
        public virtual string Отчество
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Отчество Get start)

                // *** End programmer edit section *** (Студент.Отчество Get start)
                string result = this.fОтчество;
                // *** Start programmer edit section *** (Студент.Отчество Get end)

                // *** End programmer edit section *** (Студент.Отчество Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Отчество Set start)

                // *** End programmer edit section *** (Студент.Отчество Set start)
                this.fОтчество = value;
                // *** Start programmer edit section *** (Студент.Отчество Set end)

                // *** End programmer edit section *** (Студент.Отчество Set end)
            }
        }
        
        /// <summary>
        /// ДатаРождения.
        /// </summary>
        // *** Start programmer edit section *** (Студент.ДатаРождения CustomAttributes)

        // *** End programmer edit section *** (Студент.ДатаРождения CustomAttributes)
        [NotNull()]
        public virtual System.DateTime ДатаРождения
        {
            get
            {
                // *** Start programmer edit section *** (Студент.ДатаРождения Get start)

                // *** End programmer edit section *** (Студент.ДатаРождения Get start)
                System.DateTime result = this.fДатаРождения;
                // *** Start programmer edit section *** (Студент.ДатаРождения Get end)

                // *** End programmer edit section *** (Студент.ДатаРождения Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.ДатаРождения Set start)

                // *** End programmer edit section *** (Студент.ДатаРождения Set start)
                this.fДатаРождения = value;
                // *** Start programmer edit section *** (Студент.ДатаРождения Set end)

                // *** End programmer edit section *** (Студент.ДатаРождения Set end)
            }
        }
        
        /// <summary>
        /// Логин.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Логин CustomAttributes)

        // *** End programmer edit section *** (Студент.Логин CustomAttributes)
        [StrLen(255)]
        [NotNull()]
        public virtual string Логин
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Логин Get start)

                // *** End programmer edit section *** (Студент.Логин Get start)
                string result = this.fЛогин;
                // *** Start programmer edit section *** (Студент.Логин Get end)

                // *** End programmer edit section *** (Студент.Логин Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Логин Set start)

                // *** End programmer edit section *** (Студент.Логин Set start)
                this.fЛогин = value;
                // *** Start programmer edit section *** (Студент.Логин Set end)

                // *** End programmer edit section *** (Студент.Логин Set end)
            }
        }
        
        /// <summary>
        /// Пароль.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Пароль CustomAttributes)

        // *** End programmer edit section *** (Студент.Пароль CustomAttributes)
        [StrLen(255)]
        [NotNull()]
        public virtual string Пароль
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Пароль Get start)

                // *** End programmer edit section *** (Студент.Пароль Get start)
                string result = this.fПароль;
                // *** Start programmer edit section *** (Студент.Пароль Get end)

                // *** End programmer edit section *** (Студент.Пароль Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Пароль Set start)

                // *** End programmer edit section *** (Студент.Пароль Set start)
                this.fПароль = value;
                // *** Start programmer edit section *** (Студент.Пароль Set end)

                // *** End programmer edit section *** (Студент.Пароль Set end)
            }
        }
        
        /// <summary>
        /// ФИО.
        /// </summary>
        // *** Start programmer edit section *** (Студент.ФИО CustomAttributes)

        // *** End programmer edit section *** (Студент.ФИО CustomAttributes)
        [ICSSoft.STORMNET.NotStored()]
        [StrLen(255)]
        [DataServiceExpression(typeof(ICSSoft.STORMNET.Business.MSSQLDataService), "@Фамилия@+\' \'+@Имя@+\' \'+@Отчество@")]
        public virtual string ФИО
        {
            get
            {
                // *** Start programmer edit section *** (Студент.ФИО Get)

                return null;
                // *** End programmer edit section *** (Студент.ФИО Get)
            }
            set
            {
                // *** Start programmer edit section *** (Студент.ФИО Set)

                // *** End programmer edit section *** (Студент.ФИО Set)
            }
        }

        /// <summary>
        /// АдресПочты.
        /// </summary>
        // *** Start programmer edit section *** (Студент.АдресПочты CustomAttributes)
        [ICSSoft.STORMNET.NotStored()]
        [StrLen(255)]
        [DataServiceExpression(typeof(ICSSoft.STORMNET.Business.SQLDataService), "SELECT STUFF((SELECT '; Семестр № ',\"Номер\" AS 'data()', ', программа '  ,\"Название\" AS 'data()', ', приоритет = ',\"Приоритет\" AS 'data()'" +
      " FROM \"Студент\" stud join \"ВыборПриоритета\" prior on stud.\"primaryKey\" = prior.\"Студент\" join \"Модуль\" mod on mod.\"primaryKey\" = prior.\"Модуль_m0\" join \"Семестр\" sem on mod.\"Семестр_m0\" = sem.\"primaryKey\""
      + "WHERE sem.\"Актуальность\"  = \'true\' AND mod.\"Актуальность\"  = \'true\' AND prior.\"Актуальность\"  = \'true\' AND prior.\"МодульВыбран\"  = \'true\' AND stud.\"Логин\"  = @Логин@ FOR XML PATH('')),1,2,'')")]



        // " FROM \"Семестр\" sem join \"Модуль\" mod on sem.\"primaryKey\" = mod.\"Семестр_m0\" join \"ВыборПриоритета\" prior on mod.\"primaryKey\" = prior.\"Модуль_m0\""
        //+ "WHERE sem.\"Актуальность\"  = \'true\' AND mod.\"Актуальность\"  = \'true\' FOR XML PATH('')),1,2,'')")]
        //            join \"Модуль\" mod on sem.\"primaryKey\" = mod.\"primaryKey\"" +
        //" WHERE mod.\"Актуальность\"  = \'true\' ")]



        //"SELECT \"Номер\"" +
        //" FROM \"Семестр\" sem join \"Модуль\" mod on sem.\"primaryKey\" = mod.\"Семестр\"" +
        //" WHERE mod.\"Актуальность\"  = \'true\' ")]
        //public virtual decimal СуммаОплаченныхПокупок

        //, "SELECT purchase.\"Номер\"" +" FROM \"Семестр\" sem join \"Модуль\" purchase on sem.\"primaryKey\" = purchase.\"Модуль.Семестр\"" +" WHERE  purchase.\"МодульВыбран\" = \'true\' ")]

        //    [DataServiceExpression(typeof(ICSSoft.STORMNET.Business.MSSQLDataService), "@Фамилия@+\' \'+@Имя@+\' \'+@Отчество@")]
        public virtual string Строка
        {
            get
            {
                // *** Start programmer edit section *** (Студент.ФИО Get)
                return null;
                // *** End programmer edit section *** (Студент.ФИО Get)
            }
            set
            {
                // *** Start programmer edit section *** (Студент.ФИО Set)

                // *** End programmer edit section *** (Студент.ФИО Set)
            }
        }
        // *** End programmer edit section *** (Студент.АдресПочты CustomAttributes)
        [StrLen(255)]
        [NotNull()]
        public virtual string АдресПочты
        {
            get
            {
                // *** Start programmer edit section *** (Студент.АдресПочты Get start)

                // *** End programmer edit section *** (Студент.АдресПочты Get start)
                string result = this.fАдресПочты;
                // *** Start programmer edit section *** (Студент.АдресПочты Get end)

                // *** End programmer edit section *** (Студент.АдресПочты Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.АдресПочты Set start)

                // *** End programmer edit section *** (Студент.АдресПочты Set start)
                this.fАдресПочты = value;
                // *** Start programmer edit section *** (Студент.АдресПочты Set end)

                // *** End programmer edit section *** (Студент.АдресПочты Set end)
            }
        }
        
        /// <summary>
        /// Обучается.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Обучается CustomAttributes)

        // *** End programmer edit section *** (Студент.Обучается CustomAttributes)
        public virtual bool Обучается
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Обучается Get start)

                // *** End programmer edit section *** (Студент.Обучается Get start)
                bool result = this.fОбучается;
                // *** Start programmer edit section *** (Студент.Обучается Get end)

                // *** End programmer edit section *** (Студент.Обучается Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Обучается Set start)

                // *** End programmer edit section *** (Студент.Обучается Set start)
                this.fОбучается = value;
                // *** Start programmer edit section *** (Студент.Обучается Set end)

                // *** End programmer edit section *** (Студент.Обучается Set end)
            }
        }
        
        /// <summary>
        /// КоличествоПрограмм.
        /// </summary>
        // *** Start programmer edit section *** (Студент.КоличествоПрограмм CustomAttributes)

        // *** End programmer edit section *** (Студент.КоличествоПрограмм CustomAttributes)
        public virtual int КоличествоПрограмм
        {
            get
            {
                // *** Start programmer edit section *** (Студент.КоличествоПрограмм Get start)

                // *** End programmer edit section *** (Студент.КоличествоПрограмм Get start)
                int result = this.fКоличествоПрограмм;
                // *** Start programmer edit section *** (Студент.КоличествоПрограмм Get end)

                // *** End programmer edit section *** (Студент.КоличествоПрограмм Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.КоличествоПрограмм Set start)

                // *** End programmer edit section *** (Студент.КоличествоПрограмм Set start)
                this.fКоличествоПрограмм = value;
                // *** Start programmer edit section *** (Студент.КоличествоПрограмм Set end)

                // *** End programmer edit section *** (Студент.КоличествоПрограмм Set end)
            }
        }
        
        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (Студент.CreateTime CustomAttributes)

        // *** End programmer edit section *** (Студент.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (Студент.CreateTime Get start)

                // *** End programmer edit section *** (Студент.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (Студент.CreateTime Get end)

                // *** End programmer edit section *** (Студент.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.CreateTime Set start)

                // *** End programmer edit section *** (Студент.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (Студент.CreateTime Set end)

                // *** End programmer edit section *** (Студент.CreateTime Set end)
            }
        }
        
        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Creator CustomAttributes)

        // *** End programmer edit section *** (Студент.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Creator Get start)

                // *** End programmer edit section *** (Студент.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (Студент.Creator Get end)

                // *** End programmer edit section *** (Студент.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Creator Set start)

                // *** End programmer edit section *** (Студент.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (Студент.Creator Set end)

                // *** End programmer edit section *** (Студент.Creator Set end)
            }
        }
        
        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (Студент.EditTime CustomAttributes)

        // *** End programmer edit section *** (Студент.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (Студент.EditTime Get start)

                // *** End programmer edit section *** (Студент.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (Студент.EditTime Get end)

                // *** End programmer edit section *** (Студент.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.EditTime Set start)

                // *** End programmer edit section *** (Студент.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (Студент.EditTime Set end)

                // *** End programmer edit section *** (Студент.EditTime Set end)
            }
        }
        
        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (Студент.Editor CustomAttributes)

        // *** End programmer edit section *** (Студент.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (Студент.Editor Get start)

                // *** End programmer edit section *** (Студент.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (Студент.Editor Get end)

                // *** End programmer edit section *** (Студент.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Студент.Editor Set start)

                // *** End programmer edit section *** (Студент.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (Студент.Editor Set end)

                // *** End programmer edit section *** (Студент.Editor Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(IIS.Product_58826.Студент));
                }
            }
            
            /// <summary>
            /// "СтудентE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View СтудентE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("СтудентE", typeof(IIS.Product_58826.Студент));
                }
            }
            
            /// <summary>
            /// "СтудентL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View СтудентL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("СтудентL", typeof(IIS.Product_58826.Студент));
                }
            }
        }
        
        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {
            
            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;
            
            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;
            
            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";
            
            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";
            
            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;
            
            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;
            
            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;
            
            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;
            
            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;
            
            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
}
