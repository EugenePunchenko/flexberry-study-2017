//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.Product_58826
{
    using System;
    using System.Xml;
    
    
    // *** Start programmer edit section *** (Using statements)
    using ICSSoft.STORMNET.Business;
    using System.Linq;
    using ICSSoft.STORMNET.Business.LINQProvider;
    using CheckNumber;
    using System.Configuration;
    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// ДоговорБС.
    /// </summary>
    // *** Start programmer edit section *** (ДоговорБС CustomAttributes)

    // *** End programmer edit section *** (ДоговорБС CustomAttributes)
    [ICSSoft.STORMNET.AccessType(ICSSoft.STORMNET.AccessType.none)]
    public class ДоговорБС : ICSSoft.STORMNET.Business.BusinessServer
    {
        
        // *** Start programmer edit section *** (ДоговорБС CustomMembers)

        // *** End programmer edit section *** (ДоговорБС CustomMembers)

        
        // *** Start programmer edit section *** (OnUpdateДоговор CustomAttributes)

        // *** End programmer edit section *** (OnUpdateДоговор CustomAttributes)
        public virtual ICSSoft.STORMNET.DataObject[] OnUpdateДоговор(IIS.Product_58826.Договор UpdatedObject)
        {
            // *** Start programmer edit section *** (OnUpdateДоговор)
            if (UpdatedObject.GetStatus() == ICSSoft.STORMNET.ObjectStatus.Deleted)
            {   //КАСКАДНОЕ УДАЛЕНИЕ
                DataService.LoadObject(UpdatedObject);
                UpdatedObject.SetStatus(ICSSoft.STORMNET.ObjectStatus.Altered);
                UpdatedObject.Актуальность = false;
            }
            //  ПРОВЕРКА КОРРЕКТНОСТИ НОМЕРА ДОГОВОРА
            if (CheckNumber.GetCodeForRecordBook(UpdatedObject.Номер) != "true")
            {
                var эталон = ConfigurationManager.AppSettings["template"];
                string message = CheckNumber.GetCodeForRecordBook(UpdatedObject.Номер) +" Эталон: "+эталон;
                throw new Exception(message);
            }

            var array = ((SQLDataService)DataService).Query<Договор>(Договор.Views.ДоговорE).Where(k => k.Номер == UpdatedObject.Номер).Where(k => k.Актуальность == true).ToArray();
            foreach (var arr in array)
            {
                if (UpdatedObject.Актуальность == true)
                {
                    throw new Exception("Договор с таким номером уже существует!");
                }
            }

                if  (UpdatedObject.Актуальность == true)
                {
                    var begin = UpdatedObject.Начало;
                    var end = UpdatedObject.Конец;
                    if (begin >= end)
                    {
                        throw new Exception("Некорректная запись дат заключения и окончания договора!");
                    }
                }

            return new ICSSoft.STORMNET.DataObject[0];
            // *** End programmer edit section *** (OnUpdateДоговор)
        }
    }
}
