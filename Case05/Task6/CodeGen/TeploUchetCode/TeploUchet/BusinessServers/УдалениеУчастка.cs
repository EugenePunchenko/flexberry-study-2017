//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TeploCorp.TeploUchet
{
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET.Business.LINQProvider;
    using System.Linq;
    using System;
    
    using System.Xml;


    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// УдалениеУчастка.
    /// </summary>
    // *** Start programmer edit section *** (УдалениеУчастка CustomAttributes)

    // *** End programmer edit section *** (УдалениеУчастка CustomAttributes)
    [ICSSoft.STORMNET.AccessType(ICSSoft.STORMNET.AccessType.none)]
    public class УдалениеУчастка : ICSSoft.STORMNET.Business.BusinessServer
    {
        
        // *** Start programmer edit section *** (УдалениеУчастка CustomMembers)

        // *** End programmer edit section *** (УдалениеУчастка CustomMembers)

        
        // *** Start programmer edit section *** (OnUpdateУчастокСети CustomAttributes)
        /// <summary>
        /// проверка есть ли були секторов в объекте по номеру и типу сети
        /// </summary>
        /// <param name="objectSector"></param>
        public void chesk4doubleSector(TeploCorp.TeploUchet.УчастокСети objectSector)
        {
            IDataService ids = DataServiceProvider.DataService;
            var objectKey = objectSector.__PrimaryKey;
            var objectNumber = objectSector.Номер;

            int OldПлощадь = 0;
            var ToCheckObject = ids.Query<Объект>(Объект.Views.ОбъектE).Where(y => y.__PrimaryKey == objectSector.__PrimaryKey).Where(y => y.Актуален == true);
            foreach (var j in ToCheckObject)
            {
                OldПлощадь = j.Площадь;
            };
            if (object4Calc.Площадь != OldПлощадь)
            {
                //прибавляем новую площадь и вычитаем старую компенсируя потом прибавкой её из старых значений
                object4Calc.Здание.Площади = object4Calc.Площадь - OldПлощадь;
                //находим старые площади и прибавляем
                var toSummObjects = ids.Query<Объект>(Объект.Views.ОбъектE).Where(y => y.Здание.__PrimaryKey == objectKey).Where(y => y.Актуален == true);
                foreach (var j in toSummObjects)
                {
                    object4Calc.Здание.Площади += j.Площадь;
                };
                ids.UpdateObject(object4Calc.Здание);
            }
        }
        // *** End programmer edit section *** (OnUpdateУчастокСети CustomAttributes)
        public virtual ICSSoft.STORMNET.DataObject[] OnUpdateУчастокСети(TeploCorp.TeploUchet.УчастокСети UpdatedObject)
        {
            // *** Start programmer edit section *** (OnUpdateУчастокСети)
            //ставим флаг удален 
            if (UpdatedObject.GetStatus() == ObjectStatus.Deleted)
            {
                // Не дадим объекту удалиться, но выставим флаг Актуальности.
                DataService.LoadObject(UpdatedObject);
                UpdatedObject.SetStatus(ObjectStatus.Altered);
                UpdatedObject.Актуален = false;

                var ds = (SQLDataService)DataServiceProvider.DataService;
                var delobjects = ds.Query<УчастокСети>(УчастокСети.Views.УчастокСетиE).Where(x => x.Объект.__PrimaryKey == UpdatedObject.__PrimaryKey);
                foreach (var i in delobjects)
                {
                    i.SetStatus(ObjectStatus.Deleted);
                }
                return delobjects.ToArray();
            }

            if (UpdatedObject.GetStatus() == ObjectStatus.Altered)
            {
                chesk4doubleSector(UpdatedObject);
            }

                return new ICSSoft.STORMNET.DataObject[0];
            // *** End programmer edit section *** (OnUpdateУчастокСети)
        }
    }
}
