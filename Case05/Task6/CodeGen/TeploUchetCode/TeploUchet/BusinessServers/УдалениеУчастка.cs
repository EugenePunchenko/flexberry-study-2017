//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TeploCorp.TeploUchet
{
    using System;
    using System.Xml;
    
    
    // *** Start programmer edit section *** (Using statements)
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET.Business.LINQProvider;
    using System.Linq;
    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Удаление участка.
    /// </summary>
    // *** Start programmer edit section *** (УдалениеУчастка CustomAttributes)

    // *** End programmer edit section *** (УдалениеУчастка CustomAttributes)
    [ICSSoft.STORMNET.AccessType(ICSSoft.STORMNET.AccessType.none)]
    public class УдалениеУчастка : ICSSoft.STORMNET.Business.BusinessServer
    {
        
        // *** Start programmer edit section *** (УдалениеУчастка CustomMembers)

        // *** End programmer edit section *** (УдалениеУчастка CustomMembers)

        
        // *** Start programmer edit section *** (OnUpdateУчастокСети CustomAttributes)
        /// <summary>
        /// проверка есть ли дубли секторов в объекте по номеру и типу сети
        /// </summary>
        /// <param name="Sector"></param>
        public Boolean chesk4doubleSector(TeploCorp.TeploUchet.ТипыСети Type, int Number, object Key)
        {
            IDataService ids = DataServiceProvider.DataService;

            var ToCheckSectors = ids.Query<УчастокСети>(УчастокСети.Views.УчастокСетиE)
                .Where(y => y.Объект.__PrimaryKey == Key)
                .Where(y => y.Актуален == true);

            foreach (var j in ToCheckSectors)
            {
                if (Number == j.Номер && Type == j.ТипСети)
                {
                    return true;
                }
            }
            return false;
        }

        public const Int32 MaxValue = 2147483647;
        public const Int32 MinValue = -2147483648;

        // *** End programmer edit section *** (OnUpdateУчастокСети CustomAttributes)
        public virtual ICSSoft.STORMNET.DataObject[] OnUpdateУчастокСети(TeploCorp.TeploUchet.УчастокСети UpdatedObject)
        {
            // *** Start programmer edit section *** (OnUpdateУчастокСети)
            //ставим флаг удален 
            if (UpdatedObject.GetStatus() == ObjectStatus.Deleted)
            {
                // Не дадим объекту удалиться, но выставим флаг Актуальности.
                DataService.LoadObject(UpdatedObject);
                UpdatedObject.SetStatus(ObjectStatus.Altered);
                UpdatedObject.Актуален = false;

                var ds = (SQLDataService)DataServiceProvider.DataService;
                var delobjects = ds.Query<УчастокСети>(УчастокСети.Views.УчастокСетиE).Where(x => x.Объект.__PrimaryKey == UpdatedObject.__PrimaryKey);
                foreach (var i in delobjects)
                {
                    i.SetStatus(ObjectStatus.Deleted);
                }
                return delobjects.ToArray();
            }

            if (UpdatedObject.GetStatus() == ObjectStatus.Created || UpdatedObject.GetStatus() == ObjectStatus.Altered)
            {
                //проверить на дубли при создании или изменении
                if (chesk4doubleSector(UpdatedObject.ТипСети, UpdatedObject.Номер, UpdatedObject.Объект.__PrimaryKey))
                {
                    if (UpdatedObject.Номер < MaxValue)
                    {
                        UpdatedObject.Номер += 1;
                        .AjaxControls
                    }
                    else
                    {
                        UpdatedObject.Номер = 1;
                    }  
                    
                    //Upda
                    IDataService ids = DataServiceProvider.DataService;
                    ids.UpdateObject(UpdatedObject);
                    //UpdatedObject.SetStatus(ObjectStatus.Altered);
                    TeploUchet.УчастокСети.Views.УчастокСетиE.Properties
                }
            }

            return new ICSSoft.STORMNET.DataObject[0];
            // *** End programmer edit section *** (OnUpdateУчастокСети)
        }
    }
}
